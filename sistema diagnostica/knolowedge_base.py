# -*- coding: utf-8 -*-
"""Knolowedge Base.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13TGumsZ5nKnGnJv96yLiwg_lvte4dxk3
"""

!pip install experta

def menu():
  scelta=input("Inserisci si se vuoi avviare sistema esperto")

  if scelta == "si":
      ds()

from experta import *

def ds():
  engine=DiagnosticSystem()
  engine.reset()
  engine.run()

  
class DiagnosticSystem(KnowledgeEngine):  
  
  @DefFacts()
  def _initial_action(self):
    yield Fact(question=True)

  #sintomi uguali
  @Rule(Fact(question=True))
  def ask_urinare_frequentemente(self):
    self.declare(Fact(urinare=ask_question("Urini frequentemente?Ti capita anche di notte?")))

  @Rule(Fact(question=True))
  def ask_sete(self):
    self.declare(Fact(sete=ask_question("Hai spesso sete?")))

  @Rule(Fact(question=True))
  def ask_iperglicemia(self):
    self.declare(Fact(iperglicemia=ask_question("Soffri di iperglicemia?")))

 
  #sindrome  metabolica
  @Rule(Fact(question=True))
  def ask_ipertensione(self):
    self.declare(Fact(ipertensione=ask_question("Soffri di ipertensione?")))

  @Rule(Fact(question=True))
  def ask_mal_di_testa(self):
    self.declare(Fact(mal_di_testa=ask_question("Hai spesso mal di testa?"))) 

  #DIABETE
  @Rule(Fact(question=True))
  def ask_obesità(self):
    self.declare(Fact(obesità=ask_question("Sei obeso?")))

  @Rule(Fact(question=True))
  def ask_fame(self):
    self.declare(Fact(fame=ask_question("Hai spesso tanta fame?")))

  @Rule(Fact(question=True))
  def ask_stanchezza(self):
    self.declare(Fact(stanchezza=ask_question("Sei spesso molto stanco?")))


  #diagnosi diabete
  @Rule(AND(Fact(urinare=True),Fact(sete=True),Fact(iperglicemia=True),Fact(obesità=True),Fact(fame=True),Fact(stanchezza=True)))
  def diagnosi_diabete(self):
    print("Sei diabetico")
    self.reset()

  #diagnosi sindrome
  @Rule(AND(Fact(urinare=True),Fact(sete=True),Fact(iperglicemia=True),Fact(ipertensione=True),Fact(mal_di_testa=True)))
  def diagnosi_sindrome(self):
    print("Hai sindrome metabolica")
    self.reset()
    
  #sintomi uguali
  @Rule(AND(Fact(urinare=False),Fact(sete=False),Fact(iperglicemia=False)))
  def sintomi_uguali(self):
    self.declare(Fact(sintomi_uguali=False))

  #nessuna malattia diabete
  #@Rule(OR(Fact(sintomi_uguali=True),Fact(obesità=False),Fact(fame=False),Fact(stanchezza=False)))
  #def nessuna_malattia(self):
  #  print("Non hai nessuna malattia tra diabete o sindrome metabolica")
  #  self.reset()

  @Rule(OR(Fact(sintomi_uguali=False),Fact(obesità=False),Fact(fame=False),Fact(stanchezza=False)),
        OR(Fact(sintomi_uguali=False),Fact(ipertensione=False),Fact(mal_di_testa=False)))
  def nessuna(self):
    print("non hai nessuna malattia")
    self.reset()

from typing import *
import pandas as pd

def ask_question(question:str)->bool:
  answer=input(question + "(si/no):")
  while not is_answer(answer):
    print('Il valore inserito non è valido')
    answer=input(question +"(si/no):")

    answer=answer.lower()
  return answer== "si"

def is_answer(answer:str)->bool:
  answer=answer.lower()
  return answer=="si" or answer=="no"

menu()